<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="G10GGNLT049" ignored="0" name="FirefoxTest" tests="25" failures="2" timestamp="14 Nov 2017 06:12:15 GMT" time="813.645" errors="0">
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <failure type="java.lang.IllegalArgumentException" message="wrong number of arguments">
      <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterClass tearDown" time="0.0" classname="org.usgbc.utility.Base">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="testCommunityRegistrationForExistingUser" time="72.698" classname="org.usgbc.regression.CommunityRegistrationTest"/>
  <testcase name="testCommunityRegistrationForExistingUser" time="275.778" classname="org.usgbc.regression.CommunityRegistrationTest">
    <failure type="java.lang.Error" message="Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;xpath&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;html/body/div[1]/div/div/div/div&amp;quot;}
Command duration or timeout: 0 milliseconds">
      <![CDATA[java.lang.Error: Unable to locate element: {"method":"xpath","selector":"html/body/div[1]/div/div/div/div"}
Command duration or timeout: 0 milliseconds
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:370)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:472)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy10.getText(Unknown Source)
	at org.usgbc.business.CommunityRegistration.CommunityRegistartionModuleForExistingUser(CommunityRegistration.java:124)
	at org.usgbc.regression.CommunityRegistrationTest.testCommunityRegistrationForExistingUser(CommunityRegistrationTest.java:69)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testCommunityRegistrationForExistingUser -->
  <testcase name="testCommunityRegistrationForNonExistingUser" time="137.733" classname="org.usgbc.regression.CommunityRegistrationTest"/>
  <testcase name="testCommunityRegistrationForNonExistingUserToGetRegistered" time="290.007" classname="org.usgbc.regression.CommunityRegistrationTest">
    <failure type="java.lang.Error" message="Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;xpath&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;html/body/div[1]/div/div/div/div[2]/div&amp;quot;}
Command duration or timeout: 0 milliseconds">
      <![CDATA[java.lang.Error: Unable to locate element: {"method":"xpath","selector":"html/body/div[1]/div/div/div/div[2]/div"}
Command duration or timeout: 0 milliseconds
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:370)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:472)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy10.isDisplayed(Unknown Source)
	at org.usgbc.utility.ReusableMethods.paymentReceiptdownload(ReusableMethods.java:145)
	at org.usgbc.business.CommunityRegistration.CommunityRegistartionModuleForNonExistingUserToGetRegistered(CommunityRegistration.java:88)
	at org.usgbc.regression.CommunityRegistrationTest.testCommunityRegistrationForNonExistingUserToGetRegistered(CommunityRegistrationTest.java:47)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testCommunityRegistrationForNonExistingUserToGetRegistered -->
  <testcase name="testMembership" time="0.0" classname="org.usgbc.regression.MembershipTest">
    <skipped/>
  </testcase> <!-- testMembership -->
  <testcase name="testShoppingCartLink" time="0.0" classname="org.usgbc.regression.StoreTest">
    <skipped/>
  </testcase> <!-- testShoppingCartLink -->
  <testcase name="testShoppingCartLink2" time="0.0" classname="org.usgbc.regression.StoreTest">
    <skipped/>
  </testcase> <!-- testShoppingCartLink2 -->
  <testcase name="testShoppingCartLink3" time="0.0" classname="org.usgbc.regression.StoreTest">
    <skipped/>
  </testcase> <!-- testShoppingCartLink3 -->
  <testcase name="testStoreGreen" time="0.0" classname="org.usgbc.regression.StoreTest">
    <skipped/>
  </testcase> <!-- testStoreGreen -->
  <testcase name="testStoreLEED" time="0.0" classname="org.usgbc.regression.StoreTest">
    <skipped/>
  </testcase> <!-- testStoreLEED -->
  <testcase name="testStoreLEEDandGreen" time="0.0" classname="org.usgbc.regression.StoreTest">
    <skipped/>
  </testcase> <!-- testStoreLEEDandGreen -->
  <testcase name="testUsgbcStore" time="0.0" classname="org.usgbc.regression.UsgbcStoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcStore -->
  <testcase name="testUsgbcStoreGreen" time="0.0" classname="org.usgbc.regression.UsgbcStoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcStoreGreen -->
  <testcase name="testUsgbcStoreGreen2" time="0.0" classname="org.usgbc.regression.UsgbcStoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcStoreGreen2 -->
  <testcase name="testUsgbcStoreLEED" time="0.0" classname="org.usgbc.regression.UsgbcStoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcStoreLEED -->
  <testcase name="testUsgbcStoreLEED2" time="0.0" classname="org.usgbc.regression.UsgbcStoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcStoreLEED2 -->
  <testcase name="testCommunityRegistrationCountryField" time="0.0" classname="org.usgbc.regression.CommunityRegistrationCountryFieldTest">
    <skipped/>
  </testcase> <!-- testCommunityRegistrationCountryField -->
  <testcase name="testErrorMessagesCommReg" time="0.0" classname="org.usgbc.regression.ErrorMessageCommRegTest">
    <skipped/>
  </testcase> <!-- testErrorMessagesCommReg -->
  <testcase name="testErrorMessagesCommRegCondition2" time="0.0" classname="org.usgbc.regression.ErrorMessageCommRegTest">
    <skipped/>
  </testcase> <!-- testErrorMessagesCommRegCondition2 -->
  <testcase name="testErrorMessagesCommRegCondition3" time="0.0" classname="org.usgbc.regression.ErrorMessageCommRegTest">
    <skipped/>
  </testcase> <!-- testErrorMessagesCommRegCondition3 -->
  <testcase name="testUsgbcCoreForExistingUser" time="0.0" classname="org.usgbc.regression.UsgbcCoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcCoreForExistingUser -->
  <testcase name="testUsgbcCoreForNonExistingUser" time="0.0" classname="org.usgbc.regression.UsgbcCoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcCoreForNonExistingUser -->
  <testcase name="testUsgbcCoreForNonExistingUserToGetRegistered" time="0.0" classname="org.usgbc.regression.UsgbcCoreTest">
    <skipped/>
  </testcase> <!-- testUsgbcCoreForNonExistingUserToGetRegistered -->
  <testcase name="testLoggedUser" time="0.0" classname="org.usgbc.regression.LoggedUserTest">
    <skipped/>
  </testcase> <!-- testLoggedUser -->
  <testcase name="testLoggedUser2" time="0.0" classname="org.usgbc.regression.LoggedUserTest">
    <skipped/>
  </testcase> <!-- testLoggedUser2 -->
</testsuite> <!-- FirefoxTest -->
